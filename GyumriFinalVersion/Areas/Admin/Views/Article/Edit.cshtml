@model Gyumri.Data.Models.Article
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Edit Article";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit Article</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label for="Title">Title</label>
        <input asp-for="Title" class="form-control" />
    </div>

    <div id="blocks-container">
        @for (int i = 0; i < Model.Blocks.Count; i++)
        {
            <input type="hidden" name="Blocks[@i].Id" value="@Model.Blocks[i].Id" />
            <input type="hidden" name="Blocks[@i].Order" value="@Model.Blocks[i].Order" />
            <input type="hidden" name="Blocks[@i].BlockType" value="@Model.Blocks[i].BlockType" />

            if (Model.Blocks[i].BlockType == "Paragraph")
            {
                <div class="mb-3">
                    <label>Paragraph Block #@(i + 1)</label>
                    <textarea id="editor-@i" name="Blocks[@i].Content" class="form-control">@Html.Raw(Model.Blocks[i].Content)</textarea>
                </div>
            }
            else if (Model.Blocks[i].BlockType == "Image")
            {
                <div class="mb-3">
                    <label>Current Image:</label><br />
                    <img src="@Model.Blocks[i].Content" width="200" />
                    <input type="file" name="imageFiles" class="form-control" />
                    <input type="hidden" name="Blocks[@i].Content" value="@Model.Blocks[i].Content" />
                </div>
            }
        }
    </div>

    <button type="submit" class="btn btn-primary">Save Changes</button>
</form>

<!-- CKEditor CDN -->
<script src="https://cdn.ckeditor.com/ckeditor5/41.0.0/classic/ckeditor.js"></script>

<script>
    const editors = [];

    document.addEventListener("DOMContentLoaded", () => {
        const textareas = document.querySelectorAll("textarea[id^='editor-']");
        textareas.forEach((textarea) => {
            ClassicEditor.create(textarea)
                .then(editor => {
                    editors.push(editor);
                })
                .catch(error => {
                    console.error(error);
                });
        });

        document.querySelector('form').addEventListener('submit', () => {
            editors.forEach(editor => {
                editor.updateSourceElement();
            });
        });
    });
</script>
