@model Gyumri.Data.Models.Article
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Create Article";
}

<h1>Add Article</h1>

<form asp-action="Create" method="post" enctype="multipart/form-data">
    <label>Title:</label>
    <input asp-for="Title" class="form-control" />
    <hr />

    <div id="blockContainer"></div>

    <button type="button" onclick="addBlock('Paragraph')">Add Paragraph</button>
    <button type="button" onclick="addBlock('Image')">Add Image</button>

    <br /><br />
    <button type="submit">Save</button>
</form>

<!-- CKEditor 5 from CDN -->
<script src="https://cdn.ckeditor.com/ckeditor5/41.0.0/classic/ckeditor.js"></script>

<script>
    let blockIndex = 0;

    function addBlock(type) {
        const container = document.getElementById("blockContainer");
        let html = `<div class="mb-3">
                <input type="hidden" name="Blocks[${blockIndex}].BlockType" value="${type}" />
                <input type="hidden" name="Blocks[${blockIndex}].Order" value="${blockIndex}" />`;

        if (type === "Paragraph") {
            html += `<label>Paragraph:</label>
                    <textarea id="editor-${blockIndex}" name="Blocks[${blockIndex}].Content" class="form-control"></textarea>`;
        } else {
            html += `<label>Image:</label>
                    <input type="file" name="Blocks[${blockIndex}].ImageFile" class="form-control" />`;
        }

        html += `</div>`;
        container.insertAdjacentHTML("beforeend", html);

        // Ensure CKEditor initializes properly
        if (type === "Paragraph") {
            ClassicEditor.create(document.querySelector(`#editor-${blockIndex}`))
                .then(editor => {
                    console.log('Editor initialized');
                })
                .catch(error => {
                    console.error('Error initializing CKEditor:', error);
                });
        }

        blockIndex++;
    }
</script>