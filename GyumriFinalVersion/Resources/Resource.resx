<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArchitecturalTimeTravel" xml:space="preserve">
    <value>Architectural Time Travel</value>
  </data>
  <data name="ArtTechTraditionCollide" xml:space="preserve">
    <value>Where Art, Tech, and Tradition Collide</value>
  </data>
  <data name="CulturalRenaissance" xml:space="preserve">
    <value>Cultural Renaissance</value>
  </data>
  <data name="DiscovertheHeartofArmenia" xml:space="preserve">
    <value>Discover the Heart of Armenia</value>
  </data>
  <data name="ForgeOfLegends" xml:space="preserve">
    <value>Forge of Legends</value>
  </data>
  <data name="FromEmpirestoEarthquakes" xml:space="preserve">
    <value>From Empires to Earthquakes</value>
  </data>
  <data name="GyumrisCulture" xml:space="preserve">
    <value>Gyumri's Culture</value>
  </data>
  <data name="GyumriHeritage" xml:space="preserve">
    <value>Gyumri's Heritage</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="PlanATrip" xml:space="preserve">
    <value>Plan a Trip</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>See more</value>
  </data>
  <data name="TripPlan" xml:space="preserve">
    <value>Your trip plan</value>
  </data>
  <data name="UNESCOսBlacksmithingMasterpieces" xml:space="preserve">
    <value>UNESCO’s Blacksmithing Masterpieces</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>5 reasons to visit Gyumri</value>
  </data>
  <data name="WelcomeDescription" xml:space="preserve">
    <value>An open city where innovations, arts and crafts, traditions, and humor are born.&lt;br&gt; A place for you.</value>
  </data>
  <data name="WelcomeGyumri" xml:space="preserve">
    <value>Welcome to Gyumri</value>
  </data>
  <data name="TraditionMeetsModernity" xml:space="preserve">
    <value>Tradition Meets Modernity</value>
  </data>
  <data name="LearnaboutGyumrisdistricts" xml:space="preserve">
    <value>Learn about Gyumri’s districts</value>
  </data>
  <data name="Discover" xml:space="preserve">
    <value>Discover</value>
  </data>
  <data name="GyumrisUniqueDistricts" xml:space="preserve">
    <value>Gyumri’s Unique Districts</value>
  </data>
  <data name="JourneyThroughHistoryCultureCreativit" xml:space="preserve">
    <value>A Journey Through History, Culture, and Creativit</value>
  </data>
  <data name="TakeYour" xml:space="preserve">
    <value>Take your</value>
  </data>
  <data name="AndExplore" xml:space="preserve">
    <value>and explore</value>
  </data>
  <data name="GyumriUpperCase" xml:space="preserve">
    <value>GYUMRI</value>
  </data>
  <data name="CuponUpperCase" xml:space="preserve">
    <value>COUPON</value>
  </data>
  <data name="CuponFeature" xml:space="preserve">
    <value>Our coupon feature is on the way – check back soon for</value>
  </data>
  <data name="greatDeals" xml:space="preserve">
    <value>great deals!</value>
  </data>
  <data name="LookingForMore" xml:space="preserve">
    <value>Looking For More? </value>
  </data>
  <data name="DiveDeeperIntoGyumrisHiddenGems" xml:space="preserve">
    <value>Dive Deeper into Gyumri’s Hidden Gems</value>
  </data>
  <data name="LookingForPartTextt" xml:space="preserve">
    <value>Gyumri is more than just a collection of beautiful buildings and museums — it’s a city brimming with hidden corners, untold stories, and vibrant traditions that go beyond the obvious. Whether you’re a local or a visitor, there’s always something new to uncover.</value>
  </data>
  <data name="ExploretheUndergroundArtsScene" xml:space="preserve">
    <value>Explore the Underground Arts Scene</value>
  </data>
  <data name="ExploretheUndergroundArtsSceneText" xml:space="preserve">
    <value>Gyumri’s arts scene isn’t limited to its galleries and theaters.</value>
  </data>
  <data name="TakeWorkshopWithLocalArtisans" xml:space="preserve">
    <value>Take a Workshop with Local Artisans</value>
  </data>
  <data name="TakeWorkshopWithLocalArtisansText" xml:space="preserve">
    <value>Gyumri is a city of makers.</value>
  </data>
  <data name="ExperienceGyumriAfterDark" xml:space="preserve">
    <value>Experience Gyumri After Dark</value>
  </data>
  <data name="ExperienceGyumriAfterDarkText" xml:space="preserve">
    <value>The city comes alive in a different way after sunset.</value>
  </data>
  <data name="LetsPlanYourTrip" xml:space="preserve">
    <value>Let's Plan Your Trip!</value>
  </data>
  <data name="TripPageText" xml:space="preserve">
    <value>Use this tool to organize your travel, stay, and activities for an unforgettable trip to Cymru. Get a personalized plan emailed or downloaded at the end!</value>
  </data>
  <data name="Adults" xml:space="preserve">
    <value>Adults</value>
  </data>
  <data name="GettingHere" xml:space="preserve">
    <value>Next: Getting Here</value>
  </data>
  <data name="Children" xml:space="preserve">
    <value>Children</value>
  </data>
  <data name="GettingToAround" xml:space="preserve">
    <value>Getting to/around</value>
  </data>
  <data name="WheretoStay" xml:space="preserve">
    <value>Where to Stay</value>
  </data>
  <data name="WhatToDo" xml:space="preserve">
    <value>What to Do</value>
  </data>
  <data name="Finalizing" xml:space="preserve">
    <value>Finalizing</value>
  </data>
  <data name="Yerevan" xml:space="preserve">
    <value>Yerevan</value>
  </data>
  <data name="RoutInfo" xml:space="preserve">
    <value>You're 120 km away from Gyumri</value>
  </data>
  <data name="Gyumri" xml:space="preserve">
    <value>Gyumri</value>
  </data>
  <data name="km" xml:space="preserve">
    <value>km</value>
  </data>
  <data name="Taxi" xml:space="preserve">
    <value>Taxi</value>
  </data>
  <data name="Bus" xml:space="preserve">
    <value>Bus</value>
  </data>
  <data name="Train" xml:space="preserve">
    <value>Train</value>
  </data>
  <data name="PrivateCar" xml:space="preserve">
    <value>Private Car</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="min" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="night" xml:space="preserve">
    <value>night</value>
  </data>
  <data name="GettingtoGyumri" xml:space="preserve">
    <value>Getting to Gyumri</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
</root>