@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Gyumri.Common.Utility
@using Gyumri.Data.Models;
@{
    ViewData["Title"] = @AppRes.LetsPlanYourTrip;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentCulture = Context?.Request?.Cookies["UserCulture"] ?? "en";
}
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.css" />
<link rel="stylesheet" href="~/Content/css/step1.css" data-version="1.2">
<link rel="stylesheet" href="~/Content/css/step2.css" data-version="1.2">

<link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<style>
    .filter-btn:hover {
        color: #000;
    }
</style>

<!-- Main Content -->
<div class="main-content">
    <!-- Progress Steps -->
    <div class="progress-steps d-flex justify-content-center">
        <div class="step active">
            <div class="step-icon">
                <i class="fa-solid fa-car"></i>
            </div>
            <div class="step-text"> @AppRes.GettingToAround </div>
        </div>
        <div class="step-divider"></div>
        <div class="step active">
            <div class="step-icon">
                <i class="fa-solid fa-bed"></i>
            </div>
            <div class="step-text"> @AppRes.WheretoStay </div>
        </div>
        <div class="step-divider"></div>
        <div class="step active">
            <div class="step-icon">
                <i class="fa-solid fa-location-dot"></i>
            </div>
            <div class="step-text">@AppRes.WhatToDo</div>
        </div>
        <div class="step-divider"></div>
        <div class="step">
            <div class="step-icon">
                <i class="fa-solid fa-check"></i>
            </div>
            <div class="step-text">@AppRes.Finalizing</div>
        </div>
    </div>

</div>
<form method="post" asp-controller="Trip" asp-action="WhatToDo" id="placesForm">
    <!-- Filters -->
    <div id="filter-buttons" class="mb-3 d-flex justify-content-center">
        @foreach (var item in Util.GetEnumForSecondPage())
        {
            var placeTypeStr = item.ToString();
            <button type="button" class="filter-btn custom-button-black-hover btn btn-outline-primary me-2 mb-2" data-type="@placeTypeStr">
                <i class="fa-solid fa-hotel"></i>
                @Util.GetPlaceTypeNameByEnumType(item, currentCulture)
            </button>
        }
    </div>

    <!-- Places List -->
    <div style="margin-left:auto; margin-right:auto;" id="places-container" class="row gy-3"></div>

    <!-- Pagination -->
    <div id="pagination" class="mt-4"></div>

</form>

<!-- Navigation Buttons -->
<div class="navigation-buttons">
    <a href=@Url.Action("WhereToStay", "Trip") class="back-btn">
        <i class="fa-solid fa-arrow-left"></i>
        @AppRes.Back
    </a>
    <button type="submit" form="placesForm" class="next-btn">
        @AppRes.Next
        <i class="fa-solid fa-arrow-right"></i>
    </button>
</div>

@section Scripts {
    <script>
            const places = @Html.Raw(Json.Serialize(ViewBag.Places));

        const allPlaces = @Html.Raw(Json.Serialize(ViewBag.Places));
        const pageSize = 5;
        let currentPage = 1;
        let currentFilter = null;
        let selectedPlaces = new Set();

        function filterPlaces() {
            if (!currentFilter) return allPlaces;
            return allPlaces.filter(p => p.placeType === currentFilter);
        }

        function updateHiddenInputs() {
            // Ջնջել հին hidden input-ները
            document.querySelectorAll('input.selectedPlaceHidden').forEach(el => el.remove());

            // Ավելացնել hidden input-ներ ընտրված id-ների համար
            selectedPlaces.forEach(id => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'selectedPlaceIds';
                input.value = id;
                input.classList.add('selectedPlaceHidden');
                document.getElementById('placesForm').appendChild(input);
            });
        }

        function renderPlaces() {
            const container = document.getElementById('places-container');
            container.innerHTML = '';

            const filtered = filterPlaces();
            const paginated = filtered.slice((currentPage - 1) * pageSize, currentPage * pageSize);

            if (paginated.length === 0) {
                // container.innerHTML = '<p>No places found.</p>';
                return;
            }

            paginated.forEach(p => {
                const div = document.createElement('div');
                div.className = 'accommodation-list';
                div.innerHTML = `
                    <div class="accommodation-item">
                        <div class="item-selection">
                                    <input name="selectedPlaceIds" type="checkbox" class="place-checkbox" value="${p.id}" id="place-${p.id}" data-id="${p.id}" ${selectedPlaces.has(p.id.toString()) ? 'checked' : ''} />
                                    </div>
                                            <div class="item-image">
                            <img src="/Images/places/${p.photo}" />
                        </div>
                                                <div class="item-details">

                            <label for="place-${p.id}"><strong>${p.placeName}</strong></label>
                                                        <div class="item-rating">
                                <i class="fa-solid fa-star"></i>
                                <i class="fa-solid fa-star"></i>
                                <i class="fa-solid fa-star"></i>
                                <i class="fa-solid fa-star"></i>
                                <i class="fa-regular fa-star"></i>
                            </div>
                            @if (currentCulture == "ru-RU")
                            {
                                <p  class="card-text">${p.descriptionRu}</p>
                            }
                            else if (currentCulture == "hy-AM")
                            {
                                <p  class="card-text">${p.descriptionArm}</p>
                            }
                            else
                            {
                                <p  class="card-text">${p.description}</p>
                            }
                            </div>
                                     <div class="item-price">
                            <div class="price-tag">
                                <i class="fa-solid fa-tag"></i>
                                                <span>${p.minPrice} - ${p.maxPrice} ֏ AMD / @AppRes.night</span>
                            </div>
                            <a href="@Url.Action("Category", "Home", new { categoryId = 1 })" class="more-details">@AppRes.SeeMore <i class="fa-solid fa-chevron-right"></i></a>
                        </div>
                        </div>
                    </div>
                    </div>`;
                container.appendChild(div);
            });

            renderPagination(filtered.length);
            attachCheckboxEvents();
            // updateHiddenInputs();
        }

        function attachCheckboxEvents() {
            document.querySelectorAll('.place-checkbox').forEach(cb => {
                cb.addEventListener('change', (e) => {
                    const placeId = e.target.getAttribute('data-id');
                    if (e.target.checked) {
                        selectedPlaces.add(placeId);
                    } else {
                        selectedPlaces.delete(placeId);
                    }
                    updateHiddenInputs();
                    console.log('Selected places:', Array.from(selectedPlaces));
                });
            });
        }

        function renderPagination(totalItems) {
            const totalPages = Math.ceil(totalItems / pageSize);
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';

            if (totalPages <= 1) return;

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement('button');
                btn.type = 'button';
                btn.className = 'btn btn-sm btn-outline-secondary me-1' + (i === currentPage ? ' active' : '');
                btn.innerText = i;
                btn.addEventListener('click', () => {
                    currentPage = i;
                    renderPlaces();
                });
                pagination.appendChild(btn);
            }
        }

        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                currentFilter = this.getAttribute('data-type');
                currentPage = 1;
                renderPlaces();
            });
        });

        // Հիմնական ռենդերիզացիա էջի բեռնման պահին
        renderPlaces();
    </script>
}
