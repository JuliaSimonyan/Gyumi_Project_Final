@using Gyumri.Common.Utility
@{
    ViewData["Title"] = "What To Do";
}
<form method="post" asp-action="WhatToDo" id="placesForm">
    <!-- Filters -->
    <div id="filter-buttons" class="mb-3">
        @foreach (var item in Util.GetEnumForFirstPage())
        {
            var placeTypeStr = item.ToString();
            <button type="button" class="filter-btn btn btn-outline-primary me-2 mb-2" data-type="@placeTypeStr">
                <i class="fa-solid fa-hotel"></i>
                @Util.GetPlaceTypeNameByEnumType(item)
            </button>
        }
    </div>

    <!-- Places List -->
    <div id="places-container" class="row gy-3"></div>

    <!-- Pagination -->
    <div id="pagination" class="mt-4"></div>

    <button type="submit" class="btn btn-primary mt-3">Հաջորդ քայլ</button>
</form>

@section Scripts {
    <script>
        const allPlaces = @Html.Raw(Json.Serialize(ViewBag.Places));
        const pageSize = 5;
        let currentPage = 1;
        let currentFilter = null;
        let selectedPlaces = new Set();

        function filterPlaces() {
            if (!currentFilter) return allPlaces;
            return allPlaces.filter(p => p.placeType === currentFilter);
        }

        function updateHiddenInputs() {
            // Ջնջել հին hidden input-ները
            document.querySelectorAll('input.selectedPlaceHidden').forEach(el => el.remove());

            // Ավելացնել hidden input-ներ ընտրված id-ների համար
            selectedPlaces.forEach(id => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'selectedPlaceIds';
                input.value = id;
                input.classList.add('selectedPlaceHidden');
                document.getElementById('placesForm').appendChild(input);
            });
        }

        function renderPlaces() {
            const container = document.getElementById('places-container');
            container.innerHTML = '';

            const filtered = filterPlaces();
            const paginated = filtered.slice((currentPage - 1) * pageSize, currentPage * pageSize);

            if (paginated.length === 0) {
                container.innerHTML = '<p>No places found.</p>';
                return;
            }

            paginated.forEach(p => {
                const div = document.createElement('div');
                div.className = 'col-md-4';
                div.innerHTML = `
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <input name="selectedPlaceIds" type="checkbox" class="place-checkbox" value="${p.id}" id="place-${p.id}" data-id="${p.id}" ${selectedPlaces.has(p.id.toString()) ? 'checked' : ''} />
                            <label for="place-${p.id}"><strong>${p.placeName}</strong></label>
                            <p class="card-text">Type: ${p.placeType}</p>
                            <p class="card-text">${p.description || ''}</p>
                        </div>
                    </div>`;
                container.appendChild(div);
            });

            renderPagination(filtered.length);
            attachCheckboxEvents();
            updateHiddenInputs();
        }

        function attachCheckboxEvents() {
            document.querySelectorAll('.place-checkbox').forEach(cb => {
                cb.addEventListener('change', (e) => {
                    const placeId = e.target.getAttribute('data-id');
                    if (e.target.checked) {
                        selectedPlaces.add(placeId);
                    } else {
                        selectedPlaces.delete(placeId);
                    }
                    updateHiddenInputs();
                    console.log('Selected places:', Array.from(selectedPlaces));
                });
            });
        }

        function renderPagination(totalItems) {
            const totalPages = Math.ceil(totalItems / pageSize);
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';

            if (totalPages <= 1) return;

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement('button');
                btn.type = 'button';
                btn.className = 'btn btn-sm btn-outline-secondary me-1' + (i === currentPage ? ' active' : '');
                btn.innerText = i;
                btn.addEventListener('click', () => {
                    currentPage = i;
                    renderPlaces();
                });
                pagination.appendChild(btn);
            }
        }

        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                currentFilter = this.getAttribute('data-type');
                currentPage = 1;
                renderPlaces();
            });
        });

        // Հիմնական ռենդերիզացիա էջի բեռնման պահին
        renderPlaces();
    </script>
}
