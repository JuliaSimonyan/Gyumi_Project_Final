@{
    var currentCulture = Context.Request.Cookies["UserCulture"] ?? "en";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "My List";
}
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="~/content/css/eat.css">
<link rel="stylesheet" href="~/content/css/lifeandwork.css">
<link rel="stylesheet" href="~/content/css/relax.css">
<link rel="stylesheet" href="~/content/css/see.css">

@model List<Gyumri.Data.Models.Place>

<div class="mylist-header">
    <div class="container">
        <h1>My List</h1>
    </div>
</div>

<div class="container mylist-container">
    <div class="row mylist-grid">
        @foreach (var place in Model)
        {
            <div class="col-md-4 mylist-item" id="place-@place.PlaceId">
                <div class="place-card">
                    <div class="place-image">
                        <img src="~/Images/places/@place.Photo" alt="@place.Description">
                        <button class="remove-btn" onclick="removePlace(@place.PlaceId)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <line x1="18" y1="6" x2="6" y2="18"></line>
                                <line x1="6" y1="6" x2="18" y2="18"></line>
                            </svg>
                        </button>
                    </div>
                    <div class="place-info">
                        <h3 class="place-title">
                            <a asp-controller="Home" asp-action="Articles" asp-route-articleId="@place.ArticleId">
                                @place.Description
                            </a>
                        </h3>
                        <p class="place-category">
                            @(place.Description)
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!Model.Any())
    {
        <div class="empty-list">
            <div class="empty-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
                </svg>
            </div>
            <h3>Your list is empty</h3>
            <p>Save places you're interested in to view them here later</p>
            <a asp-controller="Home" asp-action="Index" class="explore-btn">Explore Gyumri</a>
        </div>
    }
</div>

<style>
    body {
        font-family: 'Montserrat', sans-serif;
        background-color: #fff;
        color: #333;
    }
    
    .mylist-header {
        background-color: #1a1a1a;
        color: white;
        padding: 40px 0;
        margin-bottom: 40px;
    }
    
    .mylist-header h1 {
        font-size: 36px;
        font-weight: 700;
        margin: 0;
    }
    
    .mylist-container {
        padding-bottom: 60px;
    }
    
    .mylist-grid {
        margin: 0 -15px;
    }
    
    .mylist-item {
        margin-bottom: 30px;
    }
    
    .place-card {
        background-color: white;
        border-radius: 0;
        overflow: hidden;
        height: 100%;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .place-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }
    
    .place-image {
        position: relative;
        height: 220px;
        overflow: hidden;
    }
    
    .place-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .place-card:hover .place-image img {
        transform: scale(1.05);
    }
    
    .remove-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background-color: white;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        opacity: 0.8;
        transition: opacity 0.3s ease, transform 0.3s ease;
        z-index: 2;
    }
    
    .remove-btn:hover {
        opacity: 1;
        transform: scale(1.1);
    }
    
    .place-info {
        padding: 20px;
    }
    
    .place-title {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 10px 0;
        line-height: 1.3;
    }
    
    .place-title a {
        color: #1a1a1a;
        text-decoration: none;
        transition: color 0.3s ease;
    }
    
    .place-title a:hover {
        color: #555;
    }
    
    .place-category {
        font-size: 14px;
        color: #666;
        margin: 0;
    }
    
    .empty-list {
        text-align: center;
        padding: 60px 20px;
        max-width: 500px;
        margin: 0 auto;
    }
    
    .empty-icon {
        color: #ddd;
        margin-bottom: 20px;
    }
    
    .empty-list h3 {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 10px;
    }
    
    .empty-list p {
        color: #666;
        margin-bottom: 30px;
    }
    
    .explore-btn {
        display: inline-block;
        background-color: #1a1a1a;
        color: white;
        padding: 12px 24px;
        border-radius: 4px;
        text-decoration: none;
        font-weight: 500;
        transition: background-color 0.3s ease;
    }
    
    .explore-btn:hover {
        background-color: #333;
        color: white;
    }
    
    /* Toast notification */
    .toast-notification {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #333;
        color: white;
        padding: 12px 24px;
        border-radius: 4px;
        font-size: 14px;
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .toast-notification.show {
        opacity: 1;
    }
  
   
</style>

<script>
    // JavaScript function to remove the place from the view
    function removePlace(placeId) {
        // Show toast notification
        showToast('Item removed from your list');

        // Fade out the place card
        const placeElement = document.getElementById('place-' + placeId);
        placeElement.style.opacity = '0';
        placeElement.style.transform = 'translateY(20px)';
        placeElement.style.transition = 'opacity 0.3s ease, transform 0.3s ease';

        // After animation completes, hide the element
        setTimeout(() => {
            placeElement.style.display = 'none';

            // Check if there are no more items
            const remainingItems = document.querySelectorAll('.mylist-item[style="display: none;"]');
            if (remainingItems.length === document.querySelectorAll('.mylist-item').length) {
                // All items have been removed, show empty state
                location.reload();
            }
        }, 300);

        // Send request to the server to remove the place from the session
        fetch('@Url.Action("RemovePlace", "Home")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify({ placeId: placeId })
        })
            .then(response => {
                if (!response.ok) {
                    console.error("Error removing place from server.");
                }
            })
            .catch(error => {
                console.error('Error removing place:', error);
            });
    }

    // Toast notification function
    function showToast(message) {
        let toast = document.querySelector('.toast-notification');
        if (!toast) {
            toast = document.createElement('div');
            toast.className = 'toast-notification';
            document.body.appendChild(toast);
        }
        toast.textContent = message;
        toast.classList.add('show');

        // Hide after 3 seconds
        setTimeout(function () {
            toast.classList.remove('show');
        }, 3000);
    }

    
    // Toast notification function
    function showToast(message) {
        // Create toast if it doesn't exist
        let toast = document.querySelector('.toast-notification');
        if (!toast) {
            toast = document.createElement('div');
            toast.className = 'toast-notification';
            document.body.appendChild(toast);
        }
        
        // Set message and show
        toast.textContent = message;
        toast.classList.add('show');
        
        // Hide after 3 seconds
        setTimeout(function() {
            toast.classList.remove('show');
        }, 3000);
    }
</script>